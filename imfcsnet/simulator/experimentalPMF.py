from Utilities.common_packages import np
'''
NOTE:
Returns emperical EMCCD cumulative density function
'''

def getEMCCDExperimentalCDF():
    pmf = np.array([1.09863281e-08, 2.19726563e-08, 2.24609375e-07, 9.36279297e-07,
       4.07592773e-06, 1.59155273e-05, 5.57116699e-05, 1.79609375e-04,
       5.28302002e-04, 1.41228027e-03, 3.41857178e-03, 7.48006714e-03,
       1.46525537e-02, 2.58616357e-02, 4.13362634e-02, 6.03949561e-02,
       8.08437500e-02, 9.84983862e-02, 1.08626224e-01, 1.08588522e-01,
       9.87003418e-02, 8.18926709e-02, 6.26860718e-02, 4.51085901e-02,
       3.10949097e-02, 2.09580042e-02, 1.41222327e-02, 9.84534180e-03,
       7.37648560e-03, 6.09181763e-03, 5.41636475e-03, 4.94760254e-03,
       4.54225464e-03, 4.17343384e-03, 3.81529297e-03, 3.49002319e-03,
       3.22098145e-03, 2.99730591e-03, 2.78416016e-03, 2.56279053e-03,
       2.37151123e-03, 2.19724365e-03, 2.01809204e-03, 1.86089355e-03,
       1.72815918e-03, 1.61510742e-03, 1.50458618e-03, 1.38687500e-03,
       1.28535645e-03, 1.18924072e-03, 1.09601685e-03, 1.01211304e-03,
       9.39758301e-04, 8.79729004e-04, 8.17302246e-04, 7.54497070e-04,
       7.02235107e-04, 6.50061035e-04, 5.98272705e-04, 5.50753174e-04,
       5.14082031e-04, 4.83072510e-04, 4.47509766e-04, 4.15371094e-04,
       3.85217285e-04, 3.57451172e-04, 3.29506836e-04, 3.03433838e-04,
       2.82006836e-04, 2.64235840e-04, 2.45754395e-04, 2.27124023e-04,
       2.12207031e-04, 1.96057129e-04, 1.80090332e-04, 1.66965332e-04,
       1.52832031e-04, 1.40572510e-04, 1.29964600e-04, 1.22237549e-04,
       1.13851318e-04, 1.06090088e-04, 9.88293457e-05, 9.04760742e-05,
       8.27844238e-05, 7.61547852e-05, 6.98864746e-05, 6.48022461e-05,
       6.10974121e-05, 5.68090820e-05, 5.30432129e-05, 4.92907715e-05,
       4.61694336e-05, 4.28930664e-05, 3.98657227e-05, 3.68493652e-05,
       3.40588379e-05, 3.16516113e-05, 2.91394043e-05, 2.75097656e-05,
       2.52539063e-05, 2.34826660e-05, 2.16845703e-05, 2.03027344e-05,
       1.86401367e-05, 1.71093750e-05, 1.60302734e-05, 1.49523926e-05,
       1.40319824e-05, 1.29125977e-05, 1.21679688e-05, 1.09716797e-05,
       1.01403809e-05, 9.52026367e-06, 8.70239258e-06, 8.06762695e-06,
       7.66723633e-06, 7.08618164e-06, 6.55517578e-06, 6.02539063e-06,
       5.73120117e-06, 5.13061523e-06, 4.85107422e-06, 4.53979492e-06,
       4.17602539e-06, 3.94531250e-06, 3.65234375e-06, 3.41186523e-06,
       3.11523438e-06, 2.92236328e-06, 2.64892578e-06, 2.44384766e-06,
       2.27050781e-06, 2.18261719e-06, 2.03125000e-06, 1.84082031e-06,
       1.72363281e-06, 1.57348633e-06, 1.43920898e-06, 1.38671875e-06,
       1.26708984e-06, 1.12548828e-06, 1.08398438e-06, 1.04125977e-06,
       9.32617188e-07, 7.56835937e-07, 7.53173828e-07, 7.56835937e-07,
       7.38525391e-07, 6.43310547e-07, 5.67626953e-07, 6.21337891e-07,
       5.37109375e-07, 4.95605469e-07, 5.07812500e-07, 4.22363281e-07,
       3.91845703e-07, 3.86962891e-07, 3.68652344e-07, 3.10058594e-07,
       3.06396484e-07, 2.89306641e-07, 2.47802734e-07, 2.68554688e-07,
       2.70996094e-07, 2.02636719e-07, 1.67236328e-07, 1.70898437e-07,
       1.67236328e-07, 1.72119141e-07, 1.28173828e-07, 1.20849609e-07,
       1.29394531e-07, 1.40380859e-07, 1.17187500e-07, 9.88769531e-08,
       9.52148437e-08, 7.93457031e-08, 9.39941406e-08, 8.78906250e-08,
       8.66699219e-08, 7.81250000e-08, 7.32421875e-08, 5.85937500e-08,
       4.27246094e-08, 5.49316406e-08, 4.39453125e-08, 4.76074219e-08,
       4.39453125e-08, 4.51660156e-08, 4.39453125e-08, 3.54003906e-08,
       2.68554688e-08, 2.80761719e-08, 2.80761719e-08, 2.68554688e-08,
       2.44140625e-08, 2.44140625e-08, 1.58691406e-08, 1.70898437e-08,
       1.34277344e-08, 1.70898437e-08, 1.22070313e-08, 1.09863281e-08,
       9.76562500e-09, 1.58691406e-08, 1.58691406e-08, 1.46484375e-08,
       6.10351563e-09, 1.58691406e-08, 8.54492187e-09, 9.76562500e-09,
       9.76562500e-09, 1.09863281e-08, 8.54492187e-09, 7.32421875e-09,
       7.32421875e-09, 1.22070313e-08, 4.88281250e-09, 4.88281250e-09,
       1.09863281e-08, 3.66210938e-09, 3.66210938e-09, 6.10351563e-09,
       8.54492187e-09, 4.88281250e-09, 6.10351563e-09, 3.66210938e-09,
       6.10351563e-09, 1.22070313e-09, 3.66210938e-09, 0.00000000e+00,
       3.66210938e-09, 3.66210938e-09, 1.22070313e-09, 3.66210938e-09,
       2.44140625e-09, 0.00000000e+00, 0.00000000e+00, 3.66210938e-09,
       4.88281250e-09, 2.44140625e-09, 2.44140625e-09, 0.00000000e+00,
       0.00000000e+00, 2.44140625e-09, 1.22070313e-09, 1.22070313e-09,
       1.22070313e-09, 1.22070313e-09, 1.22070313e-09, 2.44140625e-09,
       1.22070313e-09, 1.22070313e-09, 0.00000000e+00, 1.22070313e-09,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.22070313e-09,
       1.22070313e-09, 0.00000000e+00, 1.22070313e-09, 0.00000000e+00,
       0.00000000e+00, 1.22070313e-09, 1.22070313e-09, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.22070313e-09,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.22070313e-09, 0.00000000e+00])

    minval = pmf.min()
    if minval < 0:
        pmf -= minval

    # normalization
    pmf = pmf / pmf.sum()

    size = pmf.size
    thissum = 0
    output = np.empty(shape=size)

    for i in range(size):
        thissum += pmf[i]
        output[i] = thissum

    # Correct for floating point errors.
    if output[size-1] < 1.0:
        output[size-1] = 1.0

    # cumulative distribution function.
    return output


if __name__ == "__main__":
    pmf = getEMCCDExperimentalCDF()
    print(len(pmf))
